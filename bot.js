require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
const express = require("express");
const fs = require("fs");

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });
const app = express();
const PORT = process.env.PORT || 5000;
const ADMIN_ID = process.env.ADMIN_ID;

app.get("/", (req, res) => {
  res.send("‚úÖ FX TOP UP BOT üíé is running!");
});
app.listen(PORT, () => console.log("Server running on port", PORT));

const plans = JSON.parse(fs.readFileSync("Plans.json"));
const ordersFile = "orders.json";
if (!fs.existsSync(ordersFile)) fs.writeFileSync(ordersFile, "[]");

// /start
bot.onText(/\/start/, (msg) => {
  const welcome = `üéÆ ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ ${msg.from.first_name}!\n\n‡¶è‡¶á ‡¶¨‡¶ü‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶∏‡¶π‡¶ú‡ßá‡¶á Free Fire Diamond ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§

üíé ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶¶‡ßá‡¶ñ‡¶§‡ßá /plans
üí∞ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶®‡¶ø‡ßü‡¶Æ ‡¶ú‡¶æ‡¶®‡¶§‡ßá /payment
üìù ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá /order
‚ùì ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶™‡ßá‡¶§‡ßá /help`;
  bot.sendMessage(msg.chat.id, welcome);
});

// /plans (inline keyboard)
bot.onText(/\/plans/, (msg) => {
  const keyboard = plans.map(plan => [
    { text: `${plan.code} - ${plan.name} (${plan.price})`, callback_data: plan.code }
  ]);
  bot.sendMessage(msg.chat.id, "üíé ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®:", {
    reply_markup: {
      inline_keyboard: keyboard
    }
  });
});

bot.on("callback_query", (query) => {
  const chatId = query.message.chat.id;
  const plan = plans.find(p => p.code === query.data);
  if (plan) {
    bot.sendMessage(chatId, `‚úÖ ‡¶Ü‡¶™‡¶®‡¶ø ${plan.name} (${plan.price}) ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶® ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§\nüëâ ‡¶è‡¶ñ‡¶® /order ‡¶¶‡¶ø‡ßü‡ßá ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§`);
  }
});

// /payment
bot.onText(/\/payment/, (msg) => {
  const text = `üí≥ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®:\nüìå bKash: ${process.env.BKASH_NUMBER}\nüìå Nagad: ${process.env.NAGAD_NUMBER}\n\n‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∂‡ßá‡¶∑‡ßá /order ‡¶¶‡¶ø‡¶®‡•§`;
  bot.sendMessage(msg.chat.id, text);
});

// /order
bot.onText(/\/order/, (msg) => {
  const instruction = `üìù ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø‡¶ó‡ßÅ‡¶≤‡ßã ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®:\n\n1. Free Fire ID:\n2. ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶ï‡ßã‡¶° (‡¶Ø‡ßá‡¶Æ‡¶® FX1):\n3. ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ (bKash/Nagad):\n4. Sender Number:\n5. TXN ID:\n\nüëâ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:\nFree Fire ID: 123456789\nPackage: FX2\nPayment: bKash\nSender: 01XXXXXXXXX\nTXN ID: XXXXXX`;
  bot.sendMessage(msg.chat.id, instruction);
});

bot.on("message", (msg) => {
  if (msg.text && msg.text.includes("Free Fire ID")) {
    const order = {
      user: msg.from.username || msg.from.first_name,
      id: msg.chat.id,
      text: msg.text,
      time: new Date().toISOString()
    };
    const orders = JSON.parse(fs.readFileSync(ordersFile));
    orders.push(order);
    fs.writeFileSync(ordersFile, JSON.stringify(orders, null, 2));

    bot.sendMessage(msg.chat.id, "‚úÖ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡ß´-‡ßß‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§");
    bot.sendMessage(ADMIN_ID, `üì• ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞:\n\n${msg.text}\nFrom: @${msg.from.username || "NoUsername"}`);
  }
});

// /orders (admin only)
bot.onText(/\/orders/, (msg) => {
  if (msg.from.id.toString() !== ADMIN_ID) return;
  const orders = JSON.parse(fs.readFileSync(ordersFile));
  let text = "üì¶ ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡¶∏‡¶Æ‡ßÇ‡¶π:\n\n";
  orders.slice(-5).forEach((o, i) => {
    text += `${i + 1}. ${o.text}\n‚Äî ${o.user}\n\n`;
  });
  bot.sendMessage(msg.chat.id, text || "‚ùå ‡¶ï‡ßã‡¶® ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§");
});

// /help
bot.onText(/\/help/, (msg) => {
  bot.sendMessage(msg.chat.id, "‚ùì ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶π‡¶≤‡ßá /order ‡¶¨‡¶æ /plans ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®, ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶® " + process.env.ADMIN_CONTACT);
});
